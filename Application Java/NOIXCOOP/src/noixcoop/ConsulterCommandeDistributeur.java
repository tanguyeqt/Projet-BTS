/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package noixcoop;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/**
 *
 * @author tangu
 */
public class ConsulterCommandeDistributeur extends javax.swing.JFrame {

    /**
     * Creates new form ConsulterCommandeDistributeur
     */
    private String login;
    
    public ConsulterCommandeDistributeur(String login) {        
        initComponents();
        this.login=login;
        chargerCommandeDistributeur();
    }
 //To change body of generated methods, choose Tools | Templates.

 
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        commandeDist = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        deco = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        retour = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        commandeDist.setColumns(20);
        commandeDist.setRows(5);
        jScrollPane1.setViewportView(commandeDist);

        jMenu1.setText("Deconnexion");

        deco.setText("Deconnexion");
        deco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decoActionPerformed(evt);
            }
        });
        jMenu1.add(deco);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Retour à l'accueil");

        retour.setText("Retour à l'accueil");
        retour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retourActionPerformed(evt);
            }
        });
        jMenu2.add(retour);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void retourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retourActionPerformed
        AccueilDistributeur AccueilDistributeur = new AccueilDistributeur(login);
        AccueilDistributeur.setTitle("Accueil "+login);
        AccueilDistributeur.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_retourActionPerformed

    private void decoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decoActionPerformed
       connexion connexion = new connexion();
        connexion.setTitle("Connexion");
        connexion.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_decoActionPerformed

    public void chargerCommandeDistributeur (){
        String login = "root"
            , mdp = "",
                ip = "jdbc:mysql://localhost/agrurppe";
        Connection c=null;
        Statement sCommande=null;
        Statement sProduit=null;
        Statement sId=null;
        try{
            Class.forName("org.gjt.mm.mysql.Driver");
            c=DriverManager.getConnection("jdbc:mysql://localhost/agrurppe","root",mdp);
            sCommande = c.createStatement();
            sProduit = c.createStatement();
            sId = c.createStatement();
            String sqlId = "SELECT idUser FROM `user` WHERE login=\""+this.login+ "\";";
            ResultSet resId = sId.executeQuery(sqlId);
            String text;
            while ( resId.next()){
                 text="<?xml version=\"1.0\"encoding=\"UTF-8\"?>\n "+
                    "<commandes idDistributeur="+resId.getString("idUser")+" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n";
            
            String sqlCommande = "SELECT * FROM `commandejava`, user WHERE commandejava.idUser = "+resId.getString("idUser")+" AND user.idUser = "+resId.getString("idUser")+" AND user.profil=\"distributeur\" ;";
            ResultSet resCommande = sCommande.executeQuery(sqlCommande);
            while (resCommande.next()){
                
                text=text+"<commande id="+resCommande.getInt("idCommandeJava")+">\n";
                
                String sqlProduit = "SELECT * FROM `produitjava`, `commandejava`, user WHERE commandejava.idCommandeJava = "+resCommande.getInt("idCommandeJava")+" "
                        + "AND user.idUser="+resId.getString("idUser")+" AND commandejava.idProduitJava = produitjava.idProduitJava";
                ResultSet resProduit = sProduit.executeQuery(sqlProduit);
                while (resProduit.next()){
                    text = text+"<produit variete="+resProduit.getString("varieteJava")+" type="+resProduit.getString("typeJava")+" calibre="+resProduit.getString("calibreJava")+" /> ";
                }
                
                text=text+ "<conditionnement type="+resCommande.getString("conditionnementJava")+" />\n"
                        + " <quantite>"+resCommande.getInt("quantiteJava")+"</quantite>\n"
                        + "<date_conditionnement>"+resCommande.getDate("dateConditionnement")+"</date_conditionnement>\n"
                        + "<date_envoi>"+resCommande.getDate("dateEnvoi")+"</date_envoi>\n"
                        + "</commande>\n"
                        + "\n";
                        
            }
            commandeDist.setText(text);
            }
            
            
        }
        catch(SQLException e){
            System.out.println("erreur premier catch");
            e.printStackTrace();
        }
        catch(ClassNotFoundException e){
            System.out.println("erreur deuxieme catch");
            e.printStackTrace();
        }finally{
            try{
                c.close();
                sCommande.close();
            }
            catch(SQLException e){
                System.out.println("erreur troisieme catch");
                e.printStackTrace();
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsulterCommandeDistributeur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsulterCommandeDistributeur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsulterCommandeDistributeur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsulterCommandeDistributeur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
}
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea commandeDist;
    private javax.swing.JMenuItem deco;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem retour;
    // End of variables declaration//GEN-END:variables
}
